{"version":3,"file":"component---src-pages-dashboards-js-9b057d0fa251ffdccbc8.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/dashboards.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport LocalizedStrings from 'react-localization';\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n// import { PowerBIEmbed } from 'powerbi-client-react';\n// import { models } from 'powerbi-client';\n\n//Components\nimport Layout from \"../components/layout\";\nimport PageTitle from \"../components/PageTitle/pageTitle\"\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\n//Screenshots\n\nlet strings = new LocalizedStrings({\n    en: {view: \"View\",\n    pagetitle: \"Dashboards\",\n    },\n    fr: {view: \"Affichez\", \n    pagetitle: \"Tableaux de bord\",\n    }\n  })\n\n\nlet dashboard_list = [\n    {\"title\": \"Canadian Army Modernization Strategy\",\n    \"description\": \"Tracking progress of initiatives and sub-initiatives on the road to modernization.\",\n    \"file_title\": \"CAMS Placemat Desktop\",\n    \"embed_url\": \"https://app.powerbi.com/reportEmbed?reportId=0cdaec13-9fa7-425f-bd70-6b21a74a7f94&autoAuth=true&ctid=325b4494-1587-40d5-bb31-8b660b7f1038\",\n    \"img\": \"camsss.JPG\"\n    },\n    {\"title\": \"Army 101 Dashboard\",\n    \"description\": \"Dashboards and placemats that describe the Canadian Army and its structure.\",\n    \"file_title\": \"Army 101\",\n    \"embed_url\": \"https://app.powerbi.com/reportEmbed?reportId=12d0edf4-365c-4965-9892-c29be534591c&autoAuth=true&ctid=325b4494-1587-40d5-bb31-8b660b7f1038\",\n    \"img\": \"army101ss.JPG\"\n    },\n    {\"title\": \"CA Interactive Org Chart\",\n    \"description\": \"See how the CA is structured and where the various organizations are located.\",\n    \"file_title\": \"CA Org Structure\",\n    \"embed_url\": \"https://app.powerbi.com/reportEmbed?reportId=dad185ad-5fd1-4c2f-b56d-bbc512e52025&autoAuth=true&ctid=325b4494-1587-40d5-bb31-8b660b7f1038\",\n    \"img\": \"orgstructss.JPG\"\n    },\n    {\"title\": \"Commander and Senior Leader Dashboard\",\n    \"description\": \"Peruse the Commander and Senior Leader Bios of the CA.\",\n    \"file_title\": \"CA General Officers\",\n    \"embed_url\": \"https://app.powerbi.com/reportEmbed?reportId=98a139c3-e995-41a5-9acf-bcfdf554e6f2&autoAuth=true&ctid=325b4494-1587-40d5-bb31-8b660b7f1038\",\n    \"img\": \"CAGenOffss.JPG\"\n    }\n]\n\nexport default function Metrics() {\n\n    //query to get dashboard screenshots\n    const data = useStaticQuery(graphql`\n    query {\n      img: \n      allFile {\n        edges {\n          node {\n            childImageSharp {\n              gatsbyImageData(width: 500)\n            }\n            relativePath\n          }\n        }\n      }\n    }`);\n\n    return (\n        <Layout>\n            <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `0 var(--size-gutter)`,\n        }}\n      >\n                <PageTitle\n                    title= {strings.pagetitle} \n                />\n            </div>\n\n            <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                <Grid container spacing={5} alignItems=\"center\" justifyContent=\"left\" mt={5} mr={5} ml={5} mb={5} sx={{display: { xs: 'none', md: 'flex' }}}>\n        \n                    {dashboard_list ? dashboard_list.map(db => {\n                        let db_img\n                        if(db && db.img){\n                            db_img = data.img.edges.filter(edges => edges.node.relativePath === db.img)\n                        }\n                        return(\n                            <Grid item xs={4}>\n                                <Card sx={{ maxWidth: 500 }}>\n                                    {db_img ? db_img.map(db_img => {\n                                        return (\n                                            <Grid container justifyContent='center'>\n                                                <Typography variant=\"h6\" component=\"div\">\n                                                    {/* {strings ? strings.location: null} */}\n                                                </Typography>            \n                                                <GatsbyImage image={getImage(db_img.node)} alt={db.title}/>\n                                            </Grid>\n                                                );\n                                    }): null}\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                            {db.title}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"text.secondary\">\n                                            {db.description}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" href={db.embed_url}>{strings ? strings.view: null}</Button>\n                                    </CardActions>\n                                </Card>                \n                            </Grid>\n                        )\n                    }): null}\n                </Grid>\n\n{/* Mobile */}\n                <Stack  direction=\"column\"  justifyContent=\"flex-start\"  alignItems=\"center\"  spacing={4} mb={7} sx={{display: { xs: 'flex', md: 'none' }}} mt={5}>\n                    {dashboard_list ? dashboard_list.map(db => {\n                        let db_img\n                        if(db && db.img){\n                            db_img = data.img.edges.filter(edges => edges.node.relativePath === db.img)\n                        }\n                        return(\n                            <Grid item xs={10}>\n                                <Card sx={{ maxWidth: 500 }}>\n                                    {db_img ? db_img.map(db_img => {\n                                        return (\n                                            <Grid container justifyContent='center'>\n                                                <Typography variant=\"h6\" component=\"div\">\n                                                    {/* {strings ? strings.location: null} */}\n                                                </Typography>            \n                                                <GatsbyImage image={getImage(db_img.node)} alt={db.title}/>\n                                            </Grid>\n                                                );\n                                    }): null}\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                            {db.title}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"text.secondary\">\n                                            {db.description}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" href={db.embed_url}>{strings ? strings.view: null}</Button>\n                                    </CardActions>\n                                </Card>                \n                            </Grid>\n                        )\n                    }): null}\n                </Stack>\n            </Grid>\n        </Layout>\n    )\n}"],"names":["strings","LocalizedStrings","en","view","pagetitle","fr","dashboard_list","Metrics","data","useStaticQuery","style","margin","maxWidth","padding","title","container","spacing","alignItems","justifyContent","mt","mr","ml","mb","sx","display","xs","md","map","db","db_img","img","edges","filter","node","relativePath","item","variant","component","G","image","getImage","alt","gutterBottom","color","description","size","href","embed_url","direction"],"sourceRoot":""}